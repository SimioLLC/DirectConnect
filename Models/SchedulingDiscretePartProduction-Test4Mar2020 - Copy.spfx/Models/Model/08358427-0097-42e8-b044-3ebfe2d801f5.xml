<Fragment>
  <Lists>
    <StringList Name="RoutingType">
      <Items>
        <Item Value="Order Based" />
        <Item Value="Product Based" />
      </Items>
    </StringList>
    <StringList Name="OrderStatus">
      <Items>
        <Item Value="New" />
        <Item Value="WIP" />
      </Items>
    </StringList>
    <StringList Name="MaterialColor">
      <Items>
        <Item Value="Green" />
        <Item Value="Red" />
        <Item Value="Blue" />
        <Item Value="Other" />
      </Items>
    </StringList>
  </Lists>
  <PropertyDefinitions>
    <Categories>
      <Category Name="Basic Logic" Description="Basic Logic" />
      <Category Name="Process Logic" Description="Process Logic" />
      <Category Name="Crossing Logic" Description="Crossing Logic" />
      <Category Name="Transport Logic" Description="Transport Logic" />
      <Category Name="Travel Logic" Description="Travel Logic" />
      <Category Name="Routing Logic" Description="Routing Logic" />
      <Category Name="Routing Logic/Other Routing Out Options" Description="Routing Logic/Other Routing Out Options" InitiallyExpanded="False" />
      <Category Name="Population" Description="Population" InitiallyExpanded="False" />
      <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
      <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
      <Category Name="Input Flow Control" Description="Input Flow Control" />
      <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
      <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
      <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
      <Category Name="Shortest Path Calculations" Description="Shortest Path Calculations" InitiallyExpanded="False" />
      <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
    </Categories>
    <SelectionRuleProperty Name="GlobalSelectionRule" DefaultValue="None" NullString="None" />
    <Overrides>
      <Override Name="ReportStatistics" Visible="False" />
      <Override Name="ParentCostCenter" Visible="False" />
      <Override Name="InitialCost" Visible="False" />
      <Override Name="InitialCostRate" Visible="False" />
      <Override Name="ResourceIdleCostRate" Visible="False" />
      <Override Name="ResourceCostPerUse" Visible="False" />
      <Override Name="ResourceUsageCostRate" Visible="False" />
      <Override Name="LogResourceUsage" Visible="False" />
      <Override Name="DisplayName" Visible="False" />
      <Override Name="DisplayCategory" Visible="False" />
      <Override Name="DisplayColor" Visible="False" />
      <Override Name="IncludeInPlanResourceConstraints" Visible="False" />
      <Override Name="CapacityType" Visible="False" />
      <Override Name="WorkSchedule" Visible="False" />
      <Override Name="WorkDayExceptions" Visible="False" />
      <Override Name="WorkPeriodExceptions" Visible="False" />
      <Override Name="InitialCapacity" Visible="False" />
      <Override Name="RankingRule" Visible="False" />
      <Override Name="RankingExpression" Visible="False" />
      <Override Name="DynamicSelectionRule" Visible="False" />
      <Override Name="CurrentSizeIndex" Visible="False" />
      <Override Name="TransferInConstraintsType" Visible="False" />
      <Override Name="TransferOutConstraintsType" Visible="False" />
      <Override Name="ExpectedSetupTimeExpression" Visible="False" />
      <Override Name="ExpectedOperationTimeExpression" Visible="False" />
    </Overrides>
  </PropertyDefinitions>
  <States />
  <Events />
  <UsedObjects>
    <UsedObject Name="SchedServer" />
    <UsedObject Name="SchedSink" />
    <UsedObject Name="TransferNode" />
    <UsedObject Name="Server" />
    <UsedObject Name="SchedSource" />
    <UsedObject Name="SchedTransferNode" />
    <UsedObject Name="Worker" />
    <UsedObject Name="SchedWorker" />
    <UsedObject Name="ModelEntity" />
  </UsedObjects>
  <Elements>
    <Element Type="ChangeoverLogic" Name="SequenceDependentSetupMatrix" Scope="Public">
      <Properties>
        <Property Name="SetupTransitions">
          <Rows>
            <Properties>
              <Property Name="OperationAttribute">Materials.MaterialColor</Property>
              <Property Name="UseChangeoverMatrix">False</Property>
              <Property Name="FromValueType">Specific</Property>
              <Property Name="SetupTime">Routings.SetupTime</Property>
            </Properties>
            <Properties>
              <Property Name="OperationAttribute">Materials.MaterialColor</Property>
              <Property Name="ChangeoverMatrixName">Resources.ChangeoverMatrix</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SetupEfficiencyMultiplier">Resources.ChangeoverEfficiency</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="FinishedGoodA" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="FinishedGoodASS" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.DisplayCategory</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="FinishedGoodB" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="FinishedGoodBSS" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.DisplayCategory</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="FinishedGoodC" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="FinishedGoodCSS" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.DisplayCategory</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="MaterialX" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="MaterialXSS" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.DisplayCategory</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="MaterialY" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="MaterialYSS" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.DisplayCategory</Property>
      </Properties>
    </Element>
  </Elements>
  <Processes />
  <Objects>
    <Entity Name="DefaultEntity" Type="ModelEntity" Location="0 0 0" YawDeg="90" Size="0.5 0.5 0.25" Scope="Public" DefaultEntity="True">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics Hidden="True" />
    </Entity>
    <Fixed Name="Cut1" Type="SchedServer" Location="-4 0 2" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Cut1" Type="BasicNode" Location="-5.5 0 2" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.SchedServer.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Cut1" Type="TransferNode" Location="-2.5 0 2" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="SchedServer.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="346f812b-7daf-4024-8ea4-5a49d0d646df" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="72b8ee17-c4d7-46ac-bd46-da291a284fa9" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="390b2452-0ecb-4690-9588-2c7e2b7ebe6d" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="32ff1ad9-5106-4b4c-b2b4-a2d979b8c702" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="6dccce92-727d-4e6f-a134-8365a73d6796" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="2c14c69c-0057-4784-a646-95aa3a671149" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="973ef02f-4d3a-442e-95c5-91fc6621837c" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="b5d2d982-5590-47eb-9800-43a5b336694a" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="0 1 2">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="-5 0 2.5" />
              <Point Location="-8 0 2.5" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="-3 0 2.5" />
              <Point Location="0 0 2.5" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="-5 0 1" />
              <Point Location="-3 0 1" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Cut2" Type="SchedServer" Location="-4 0 7" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Cut2" Type="BasicNode" Location="-5.5 0 7" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.SchedServer.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Cut2" Type="TransferNode" Location="-2.5 0 7" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="SchedServer.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="346f812b-7daf-4024-8ea4-5a49d0d646df" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="72b8ee17-c4d7-46ac-bd46-da291a284fa9" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="390b2452-0ecb-4690-9588-2c7e2b7ebe6d" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="32ff1ad9-5106-4b4c-b2b4-a2d979b8c702" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="6dccce92-727d-4e6f-a134-8365a73d6796" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="2c14c69c-0057-4784-a646-95aa3a671149" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="973ef02f-4d3a-442e-95c5-91fc6621837c" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="b5d2d982-5590-47eb-9800-43a5b336694a" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="3 4 5">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="-5 0 7.5" />
              <Point Location="-8 0 7.5" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="-3 0 7.5" />
              <Point Location="0 0 7.5" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="-5 0 6" />
              <Point Location="-3 0 6" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Shape1" Type="SchedServer" Location="1 0 -2" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Shape1" Type="BasicNode" Location="-0.5 0 -2" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.SchedServer.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Shape1" Type="TransferNode" Location="2.5 0 -2" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="SchedServer.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="346f812b-7daf-4024-8ea4-5a49d0d646df" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="72b8ee17-c4d7-46ac-bd46-da291a284fa9" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="390b2452-0ecb-4690-9588-2c7e2b7ebe6d" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="32ff1ad9-5106-4b4c-b2b4-a2d979b8c702" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="6dccce92-727d-4e6f-a134-8365a73d6796" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="2c14c69c-0057-4784-a646-95aa3a671149" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="973ef02f-4d3a-442e-95c5-91fc6621837c" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="b5d2d982-5590-47eb-9800-43a5b336694a" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="6 7 8">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="0 0 -1.5" />
              <Point Location="-3 0 -1.5" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="2 0 -1.5" />
              <Point Location="5 0 -1.5" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="0 0 -3" />
              <Point Location="2 0 -3" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Shape2" Type="SchedServer" Location="9 0 -2" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Shape2" Type="BasicNode" Location="7.5 0 -2" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.SchedServer.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Shape2" Type="TransferNode" Location="10.5 0 -2" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="SchedServer.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="346f812b-7daf-4024-8ea4-5a49d0d646df" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="72b8ee17-c4d7-46ac-bd46-da291a284fa9" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="390b2452-0ecb-4690-9588-2c7e2b7ebe6d" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="32ff1ad9-5106-4b4c-b2b4-a2d979b8c702" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="6dccce92-727d-4e6f-a134-8365a73d6796" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="2c14c69c-0057-4784-a646-95aa3a671149" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="973ef02f-4d3a-442e-95c5-91fc6621837c" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="b5d2d982-5590-47eb-9800-43a5b336694a" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="9 10 11">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="8 0 -1.5" />
              <Point Location="5 0 -1.5" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="10 0 -1.5" />
              <Point Location="13 0 -1.5" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="8 0 -3" />
              <Point Location="10 0 -3" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Weld1" Type="SchedServer" Location="1 0 12" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Weld1" Type="BasicNode" Location="-0.5 0 12" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.SchedServer.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Weld1" Type="TransferNode" Location="2.5 0 12" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="SchedServer.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="346f812b-7daf-4024-8ea4-5a49d0d646df" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="72b8ee17-c4d7-46ac-bd46-da291a284fa9" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="390b2452-0ecb-4690-9588-2c7e2b7ebe6d" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="32ff1ad9-5106-4b4c-b2b4-a2d979b8c702" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="6dccce92-727d-4e6f-a134-8365a73d6796" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="2c14c69c-0057-4784-a646-95aa3a671149" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="973ef02f-4d3a-442e-95c5-91fc6621837c" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="b5d2d982-5590-47eb-9800-43a5b336694a" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="12 13 14">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="0 0 12.5" />
              <Point Location="-3 0 12.5" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="2 0 12.5" />
              <Point Location="5 0 12.5" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="0 0 11" />
              <Point Location="2 0 11" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Weld2" Type="SchedServer" Location="9 0 12" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Weld2" Type="BasicNode" Location="7.5 0 12" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.SchedServer.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Weld2" Type="TransferNode" Location="10.5 0 12" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="SchedServer.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="346f812b-7daf-4024-8ea4-5a49d0d646df" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="72b8ee17-c4d7-46ac-bd46-da291a284fa9" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="390b2452-0ecb-4690-9588-2c7e2b7ebe6d" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="32ff1ad9-5106-4b4c-b2b4-a2d979b8c702" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="6dccce92-727d-4e6f-a134-8365a73d6796" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="2c14c69c-0057-4784-a646-95aa3a671149" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="973ef02f-4d3a-442e-95c5-91fc6621837c" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="b5d2d982-5590-47eb-9800-43a5b336694a" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="15 16 17">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="8 0 12.5" />
              <Point Location="5 0 12.5" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="10 0 12.5" />
              <Point Location="13 0 12.5" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="8 0 11" />
              <Point Location="10 0 11" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Finish1" Type="SchedServer" Location="15 0 2" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Finish1" Type="BasicNode" Location="13.5 0 2" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.SchedServer.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Finish1" Type="TransferNode" Location="16.5 0 2" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="SchedServer.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="346f812b-7daf-4024-8ea4-5a49d0d646df" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="72b8ee17-c4d7-46ac-bd46-da291a284fa9" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="390b2452-0ecb-4690-9588-2c7e2b7ebe6d" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="32ff1ad9-5106-4b4c-b2b4-a2d979b8c702" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="6dccce92-727d-4e6f-a134-8365a73d6796" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="2c14c69c-0057-4784-a646-95aa3a671149" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="973ef02f-4d3a-442e-95c5-91fc6621837c" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="b5d2d982-5590-47eb-9800-43a5b336694a" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="18 19 20">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="14 0 2.5" />
              <Point Location="11 0 2.5" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="16 0 2.5" />
              <Point Location="19 0 2.5" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="14 0 1" />
              <Point Location="16 0 1" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Finish2" Type="SchedServer" Location="15 0 7" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Finish2" Type="BasicNode" Location="13.5 0 7" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.SchedServer.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Finish2" Type="TransferNode" Location="16.5 0 7" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsObjectName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">SchedServer.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Switch Resources If Possible</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="SchedServer.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="346f812b-7daf-4024-8ea4-5a49d0d646df" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="72b8ee17-c4d7-46ac-bd46-da291a284fa9" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="390b2452-0ecb-4690-9588-2c7e2b7ebe6d" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="32ff1ad9-5106-4b4c-b2b4-a2d979b8c702" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="6dccce92-727d-4e6f-a134-8365a73d6796" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="2c14c69c-0057-4784-a646-95aa3a671149" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="973ef02f-4d3a-442e-95c5-91fc6621837c" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="b5d2d982-5590-47eb-9800-43a5b336694a" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="21 22 23">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="14 0 7.5" />
              <Point Location="11 0 7.5" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="16 0 7.5" />
              <Point Location="19 0 7.5" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="14 0 6" />
              <Point Location="16 0 6" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="MoArrivals" Type="SchedSource" Location="-14 0 5" YawDeg="90" Size="1.49711911473274 1.02344522701085 0.999999706897704" Scope="Public">
      <AssociatedNodes>
        <Node Name="Output@MoArrivals" Type="TransferNode" Location="-12.75 0 5" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="ParentCostCenter">
              <Value></Value>
            </Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="LogResourceUsage">False</Property>
            <Property Name="DisplayName"></Property>
            <Property Name="DisplayCategory"></Property>
            <Property Name="DisplayColor"></Property>
            <Property Name="IncludeInPlanResourceConstraints">True</Property>
            <Property Name="CapacityType">Fixed</Property>
            <Property Name="WorkSchedule"></Property>
            <Property Name="InitialCapacity">1</Property>
            <Property Name="RankingRule">First In First Out</Property>
            <Property Name="RankingExpression">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="CurrentSizeIndex">
              <Value></Value>
            </Property>
            <Property Name="TransferInConstraintsType">Default</Property>
            <Property Name="TransferInCondition"></Property>
            <Property Name="TransferOutConstraintsType">Default</Property>
            <Property Name="TransferOutCondition"></Property>
            <Property Name="ExpectedSetupTimeExpression">0.0</Property>
            <Property Name="ExpectedOperationTimeExpression">0.0</Property>
            <Property Name="InitialTravelerCapacity">Infinity</Property>
            <Property Name="EntryRankingRule">First In First Out</Property>
            <Property Name="EntryRankingExpression">Entity.Priority</Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="OutputFlowControlMode">Single Flow (No Splitting)</Property>
            <Property Name="FlowSplitAllocationRule">Evenly If Possible</Property>
            <Property Name="OutboundTravelMode">Continue</Property>
            <Property Name="OutboundLinkPreference">Any</Property>
            <Property Name="OutboundLinkRule">Shortest Path</Property>
            <Property Name="OutboundLinkName"></Property>
            <Property Name="OutboundLinkRandomNumberStream">0</Property>
            <Property Name="SequenceExpectedOperationTime">0.0</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="DestinationNodeName">No Destination</Property>
            <Property Name="DestinationNodeListName"></Property>
            <Property Name="DestinationRoutingGroupName">
              <Value></Value>
            </Property>
            <Property Name="DestinationSelectionGoal">Preferred Order</Property>
            <Property Name="DestinationSelectionExpression">Candidate.Node.AssociatedStationOverload</Property>
            <Property Name="DestinationSelectionCondition"></Property>
            <Property Name="BlockedDestinationRule">Select Available Only</Property>
            <Property Name="RouteRequestRankingRule">First In First Out</Property>
            <Property Name="RouteRequestRankingExpression">Entity.Priority</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporter">False</Property>
            <Property Name="TransporterType">Specific</Property>
            <Property Name="TransporterName"></Property>
            <Property Name="TransporterListName"></Property>
            <Property Name="TransporterReservationMethod">Reserve Closest</Property>
            <Property Name="TransporterSelectionGoal">Preferred Order</Property>
            <Property Name="TransporterSelectionExpression">Candidate.Transporter.RideStationOverload</Property>
            <Property Name="TransporterSelectionCondition"></Property>
            <Property Name="TransporterStatusOnDropOffKeepReservedCondition"></Property>
            <Property Name="RunInitializedAddOnProcess">
              <Value></Value>
            </Property>
            <Property Name="RunEndingAddOnProcess">
              <Value></Value>
            </Property>
            <Property Name="EnteredAddOnProcess">
              <Value></Value>
            </Property>
            <Property Name="ExitedAddOnProcess">
              <Value></Value>
            </Property>
            <Property Name="BoundExternalOutputNode"></Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="AssignmentsBeforeExiting">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.Cost</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue" Units="USD">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP, Math.If( WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].AccruedCost, 0), 0)</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.Picture</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">Materials.MaterialColor</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="24">
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="-13 0 5.5" />
              <Point Location="-10 0 5.5" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Ship" Type="SchedSink" Location="20 0 5" YawDeg="90" Size="1.5049811730262 1.02881997857009 1.00000033977415" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Ship" Type="BasicNode" Location="18.75 0 5" YawDeg="90" Scope="Public">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="ParentCostCenter">
              <Value></Value>
            </Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="LogResourceUsage">False</Property>
            <Property Name="DisplayName"></Property>
            <Property Name="DisplayCategory"></Property>
            <Property Name="DisplayColor"></Property>
            <Property Name="IncludeInPlanResourceConstraints">True</Property>
            <Property Name="CapacityType">Fixed</Property>
            <Property Name="WorkSchedule"></Property>
            <Property Name="InitialCapacity">1</Property>
            <Property Name="RankingRule">First In First Out</Property>
            <Property Name="RankingExpression">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="CurrentSizeIndex">
              <Value></Value>
            </Property>
            <Property Name="TransferInConstraintsType">Default</Property>
            <Property Name="TransferInCondition"></Property>
            <Property Name="TransferOutConstraintsType">Default</Property>
            <Property Name="TransferOutCondition"></Property>
            <Property Name="ExpectedSetupTimeExpression">0.0</Property>
            <Property Name="ExpectedOperationTimeExpression">0.0</Property>
            <Property Name="InitialTravelerCapacity">Infinity</Property>
            <Property Name="EntryRankingRule">First In First Out</Property>
            <Property Name="EntryRankingExpression">Entity.Priority</Property>
            <Property Name="EntryExemptionCondition"></Property>
            <Property Name="OutputFlowControlMode">Single Flow (No Splitting)</Property>
            <Property Name="FlowSplitAllocationRule">Evenly If Possible</Property>
            <Property Name="OutboundTravelMode">Continue</Property>
            <Property Name="OutboundLinkPreference">Any</Property>
            <Property Name="OutboundLinkRule">Shortest Path</Property>
            <Property Name="OutboundLinkName"></Property>
            <Property Name="OutboundLinkRandomNumberStream">0</Property>
            <Property Name="SequenceExpectedOperationTime">0.0</Property>
            <Property Name="RunInitializedAddOnProcess">
              <Value></Value>
            </Property>
            <Property Name="RunEndingAddOnProcess">
              <Value></Value>
            </Property>
            <Property Name="EnteredAddOnProcess">
              <Value></Value>
            </Property>
            <Property Name="ExitedAddOnProcess">
              <Value></Value>
            </Property>
            <Property Name="BoundExternalOutputNode"></Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="AssignmentsOnEntering">
          <Rows>
            <Properties>
              <Property Name="AssignmentsOnEnteringStateVariableName">
                <Value>ManufacturingOrders.ShipDate</Value>
              </Property>
              <Property Name="AssignmentsOnEnteringNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsOnEnteringStateVariableName">
                <Value>ManufacturingOrders.ProductionCost</Value>
              </Property>
              <Property Name="AssignmentsOnEnteringNewValue" Units="Default Currency">Entity.Cost</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="25">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="19 0 5.5" />
              <Point Location="16 0 5.5" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Transporter Name="Worker1" Type="SchedWorker" Location="-14 0 -3" YawDeg="90" Size="0.605776330622042 0.596902287731117 1.80000021694117" Scope="Public">
      <IndexedSizes>
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
          <Value>Standard Dispatching Rule</Value>
          <Properties>
            <Property Name="DispatchingRule">SmallestAttributeValue</Property>
            <Property Name="AttributeValueExpression">SchedWorker.DirectDistanceTo.Object( Candidate.Entity )</Property>
            <Property Name="TieBreakerRule">EarliestDueDate</Property>
          </Properties>
        </Property>
        <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
        <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="CapitalCostPerWorker" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="SchedWorker.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="60c994ba-399f-4bda-937e-a9c5f504a24e" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="8442ac60-1b72-4c2d-ad27-a550c3ae78ca" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="1550743b-f4b6-415e-9d7a-ac242d6ce02d" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="d0e40d2b-737f-4088-9b2e-86609e2626e4" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="c0f61a0a-c96a-40d6-8771-035bc4999491" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="114f5808-b307-47c0-8e92-3c329474cf17" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="9c1db8ee-b3c2-4e6b-8d9a-5b41a72cc550" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="f469e5e3-1746-49b4-b6db-bb154565a3bb" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="bc6268bc-2fde-4f27-a30d-9b823035c2e9" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="26">
          <Queue Queue="RideStation.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="-13.5 1.10000002384186 -2.5" />
              <Point Location="-13.5 1.10000002384186 -3.5" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Transporter>
    <Transporter Name="Worker2" Type="SchedWorker" Location="-14 0 1" YawDeg="90" Size="0.605776330622042 0.596902287731117 1.80000021694117" Scope="Public">
      <IndexedSizes>
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
        <IndexedSize Size="0.605776330622042 0.596902287731117 1.80000021694117" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule" RuleGuid="60f74791-6ccc-453b-8da7-946990d495d5">
          <Value>Standard Dispatching Rule</Value>
          <Properties>
            <Property Name="DispatchingRule">SmallestAttributeValue</Property>
            <Property Name="AttributeValueExpression">SchedWorker.DirectDistanceTo.Object( Candidate.Entity )</Property>
            <Property Name="TieBreakerRule">EarliestDueDate</Property>
          </Properties>
        </Property>
        <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
        <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="CapitalCostPerWorker" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="SchedWorker.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="60c994ba-399f-4bda-937e-a9c5f504a24e" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="8442ac60-1b72-4c2d-ad27-a550c3ae78ca" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="1550743b-f4b6-415e-9d7a-ac242d6ce02d" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="d0e40d2b-737f-4088-9b2e-86609e2626e4" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="c0f61a0a-c96a-40d6-8771-035bc4999491" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="114f5808-b307-47c0-8e92-3c329474cf17" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="9c1db8ee-b3c2-4e6b-8d9a-5b41a72cc550" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="f469e5e3-1746-49b4-b6db-bb154565a3bb" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="bc6268bc-2fde-4f27-a30d-9b823035c2e9" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="27">
          <Queue Queue="RideStation.Contents" ExternallyVisible="True">
            <Points>
              <Point Location="-13.5 1.10000002384186 1.5" />
              <Point Location="-13.5 1.10000002384186 0.5" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Transporter>
    <Node Name="Cut" Type="SchedTransferNode" Location="-8 0 5" YawDeg="90" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="RoutingOutRequiredMaterials">
          <Value>BillOfMaterials</Value>
          <Rows>
            <Properties>
              <Property Name="RequiredMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="RequiredMaterialQuantity">Math.If( ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, 0.0, Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0))</Property>
              <Property Name="RequiredMaterialLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="RouteRequestDynamicSelectionRule">
          <Value>GlobalSelectionRule</Value>
        </Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Node>
    <Node Name="Shape" Type="SchedTransferNode" Location="5 0 -1" YawDeg="90" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="RoutingOutRequiredMaterials">
          <Value>BillOfMaterials</Value>
          <Rows>
            <Properties>
              <Property Name="RequiredMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="RequiredMaterialQuantity">Math.If( ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, 0.0, Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0))</Property>
              <Property Name="RequiredMaterialLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="RouteRequestDynamicSelectionRule">
          <Value>GlobalSelectionRule</Value>
        </Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Node>
    <Node Name="Weld" Type="SchedTransferNode" Location="5 0 11" YawDeg="90" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="RoutingOutRequiredMaterials">
          <Value>BillOfMaterials</Value>
          <Rows>
            <Properties>
              <Property Name="RequiredMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="RequiredMaterialQuantity">Math.If( ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, 0.0, Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0))</Property>
              <Property Name="RequiredMaterialLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="RouteRequestDynamicSelectionRule">
          <Value>GlobalSelectionRule</Value>
        </Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Node>
    <Node Name="Finish" Type="SchedTransferNode" Location="12 0 5" YawDeg="90" Scope="Public">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="RoutingOutRequiredMaterials">
          <Value>BillOfMaterials</Value>
          <Rows>
            <Properties>
              <Property Name="RequiredMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="RequiredMaterialQuantity">Math.If( ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, 0.0, Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0))</Property>
              <Property Name="RequiredMaterialLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="RouteRequestDynamicSelectionRule">
          <Value>GlobalSelectionRule</Value>
        </Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Node>
  </Objects>
  <Tables>
    <Table Name="Resources">
      <Schema>
        <PropertyDefinitions>
          <ObjectInstanceProperty Name="ResourceName" DefaultValue="null" NullString="null" ObjectTypeName="ObjectType" DefaultValueInstantiation="AutoCreateInstance" LocationType="Cartesian" InitialOffsetX="XLocation" InitialOffsetY="0" InitialOffsetZ="ZLocation" />
          <StringProperty Name="Description" NullString="null" />
          <StringProperty Name="DisplayCategory" NullString="null" />
          <RealProperty Name="XLocation" DefaultValue="0" NullString="null" UnitType="Length" />
          <RealProperty Name="ZLocation" DefaultValue="0" NullString="null" UnitType="Length" />
          <ObjectTypeProperty Name="ObjectType" DefaultValue="Server" NullString="null" />
          <ScheduleProperty Name="WorkSchedule" DefaultValue="StandardWeek" NullString="null" />
          <RealProperty Name="CostRate" DefaultValue="0" NullString="null" UnitType="CurrencyPerTimeUnit" />
          <ChangeoverMatrixProperty Name="ChangeoverMatrix" Required="False" NullString="null" />
          <ObjectInstanceProperty Name="SecondaryResourceName" Required="False" NullString="null" LocationType="Cartesian" />
          <Overrides />
        </PropertyDefinitions>
        <Keys>
          <Key Column="ResourceName" />
        </Keys>
        <AutoRows>
          <AutoRow Column="ResourceName" />
        </AutoRows>
        <States>
          <DiscreteState Name="ChangeoverEfficiency" InitialValue="1" />
        </States>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="ResourceName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Description" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="DisplayCategory" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="XLocation" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ZLocation" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ObjectType" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="WorkSchedule" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CostRate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ChangeoverMatrix" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="SecondaryResourceName" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\Resources.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="RoutingDestinations">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="ResourceName" NullString="null" TableKey="Resources.ResourceName" />
          <NodeProperty Name="Node" DefaultValue="null" NullString="null" ValidObjectType="Node" LocationType="Cartesian" />
          <Overrides />
        </PropertyDefinitions>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\RoutingDestinations.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="Materials" LastImportTimeUTC="2019-07-07T23:34:34.4748417Z">
      <Schema>
        <PropertyDefinitions>
          <ElementProperty Name="MaterialName" DefaultValue="null" NullString="null" Type="Material" ReferenceType="Create">
            <AutoCreateInitialValues>
              <AutoCreateInitialValue Name="InitialQuantities" Value="MaterialLots" />
              <AutoCreateInitialValue Name="CostPerUnit" Value="Materials.MaterialCost" />
              <AutoCreateInitialValue Name="LogMaterialUsage" Value="True" />
              <AutoCreateInitialValue Name="InitialQuantities.InitialQuantitiesInitialQuantity" Value="MaterialLots.Quantity" />
              <AutoCreateInitialValue Name="InitialQuantities.InitialQuantitiesLotID" Value="MaterialLots.LotId" />
            </AutoCreateInitialValues>
          </ElementProperty>
          <StringProperty Name="DisplayCategory" NullString="null" />
          <StringProperty Name="MaterialClass" NullString="null" />
          <RealProperty Name="MaterialCost" DefaultValue="0" NullString="null" UnitType="Currency" />
          <ListProperty Name="MaterialColor" DefaultValue="Other" NullString="null" List="MaterialColor" />
          <ColorProperty Name="GanttColor" DefaultValue="Gray" NullString="null" />
          <ElementProperty Name="MaterialStateStatistic" Required="False" NullString="null" Type="StateStatistic" ReferenceType="Create">
            <AutoCreateInitialValues>
              <AutoCreateInitialValue Name="StateVariableName" Value="Materials.MaterialName.QuantityInStock" />
              <AutoCreateInitialValue Name="DataSource" Value="Materials.MaterialName" />
              <AutoCreateInitialValue Name="DisplayCategory" Value="Materials.DisplayCategory" />
              <AutoCreateInitialValue Name="LogObservations" Value="True" />
            </AutoCreateInitialValues>
          </ElementProperty>
          <Overrides />
        </PropertyDefinitions>
        <Keys>
          <Key Column="MaterialName" />
        </Keys>
        <AutoRows>
          <AutoRow Column="MaterialName" />
          <AutoRow Column="MaterialStateStatistic" />
        </AutoRows>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="MaterialName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="DisplayCategory" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialClass" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialCost" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialColor" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="GanttColor" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialStateStatistic" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\Materials.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="MaterialLots">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="MaterialName" NullString="null" TableKey="Materials.MaterialName" />
          <StringProperty Name="LotId" NullString="null" />
          <RealProperty Name="Quantity" DefaultValue="0" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="MaterialName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="LotId" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Quantity" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\MaterialLots.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="ManufacturingOrders">
      <Schema>
        <PropertyDefinitions>
          <StringProperty Name="OrderId" NullString="null" />
          <ForeignKeyProperty Name="MaterialName" NullString="null" TableKey="Materials.MaterialName" />
          <DateTimeProperty Name="ReleaseDate" DefaultValue="11/20/2017 12:00:00 AM" NullString="null" UnitType="Time" />
          <DateTimeProperty Name="DueDate" DefaultValue="11/20/2017 12:00:00 AM" NullString="null" UnitType="Time" />
          <ListProperty Name="OrderStatus" DefaultValue="New" NullString="null" List="OrderStatus" />
          <IntegerProperty Name="Priority" DefaultValue="0" NullString="null" />
          <RealProperty Name="Quantity" DefaultValue="0" NullString="null" />
          <ExpressionProperty Name="AdjustedReleaseDate" DefaultValue="Math.Max(ManufacturingOrders.ReleaseDate, 0.0)" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <Keys>
          <Key Column="OrderId" />
        </Keys>
        <States>
          <DateTimeState Name="ShipDate" />
          <DiscreteState Name="ProductionCost" InitialValueUnits="Default Currency" UnitType="Currency" />
        </States>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="OrderId" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ReleaseDate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="DueDate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="OrderStatus" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Priority" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Quantity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="AdjustedReleaseDate" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
        <Targets>
          <Target Name="TargetShipDate" DataFormat="DateTime" UnitType="Unspecified" WithinBoundsStatus="OnTime" AboveBoundsStatus="Late" NoValueStatus="Incomplete">
            <Expression>ManufacturingOrders.ShipDate</Expression>
            <UpperBound>ManufacturingOrders.DueDate</UpperBound>
          </Target>
          <Target Name="TargetCost" DataFormat="Real" UnitType="Currency" WithinBoundsStatus="OnBudget" AboveBoundsStatus="Overrun" NoValueStatus="Incomplete">
            <Expression Units="USD">ManufacturingOrders.ProductionCost</Expression>
            <UpperBound Units="USD">100000</UpperBound>
          </Target>
        </Targets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\ManufacturingOrders.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="Routings">
      <Schema>
        <PropertyDefinitions>
          <StringProperty Name="RoutingKey" NullString="null" />
          <SequenceDestinationProperty Name="Sequence" DefaultValue="null" NullString="null" AcceptsAnyNode="False" />
          <ForeignKeyProperty Name="MaterialName" NullString="null" TableKey="Materials.MaterialName" />
          <IntegerProperty Name="RouteNumber" DefaultValue="10" NullString="null" />
          <RealProperty Name="SetupTime" DefaultValue="0" NullString="null" UnitType="Time" />
          <RealProperty Name="ProcessTime" DefaultValue="0" NullString="null" UnitType="Time" />
          <Overrides />
        </PropertyDefinitions>
        <Keys>
          <Key Column="RoutingKey" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="RoutingKey" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Sequence" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="RouteNumber" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="SetupTime" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ProcessTime" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\Routings.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="BillOfMaterials">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="RoutingKey" NullString="null" TableKey="Routings.RoutingKey" />
          <ElementProperty Name="ComponentMaterial" DefaultValue="null" NullString="null" Type="Material" />
          <RealProperty Name="RequiredQuantity" DefaultValue="0" NullString="null" />
          <StringProperty Name="RequiredLotId" NullString="null" />
          <EnumProperty Name="MaterialUse" DefaultValue="Consume" NullString="null" EnumType="MaterialActionType" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="RoutingKey" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ComponentMaterial" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="RequiredQuantity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="RequiredLotId" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialUse" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\BillOfMaterials.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="WorkInProcess">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="OrderId" NullString="null" TableKey="ManufacturingOrders.OrderId" />
          <IntegerProperty Name="CurrentRouteNumber" DefaultValue="10" NullString="null" />
          <ObjectInstanceProperty Name="CurrentResource" NullString="null" FilterMode="Resources" LocationType="Cartesian" />
          <RealProperty Name="FractionOfSetupCompleted" DefaultValue="0" NullString="null" />
          <RealProperty Name="CompletedQuantity" DefaultValue="0" NullString="null" />
          <RealProperty Name="AccruedCost" DefaultValue="0" NullString="null" UnitType="Currency" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="OrderId" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CurrentRouteNumber" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CurrentResource" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="FractionOfSetupCompleted" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CompletedQuantity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="AccruedCost" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\WorkInProcess.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="ManufacturingOrdersOutput" OutputOnly="True">
      <Schema>
        <States>
          <ForeignKeyState Name="OrderId" ReadOnly="True" TableKey="ManufacturingOrders.OrderId" />
          <ForeignKeyState Name="RoutingKey" ReadOnly="True" TableKey="Routings.RoutingKey" />
          <StringState Name="ScheduledResource" />
          <DateTimeState Name="ScheduledStartTime" />
          <DateTimeState Name="ScheduledEndTime" />
          <DiscreteState Name="ScheduledQuantity" />
        </States>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\ManufacturingOrdersOutput.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
  </Tables>
  <Schedules>
    <Schedule Name="StandardWeek" CycleDays="7" StartDate="2011-01-03T00:00:00" Description="Standard Work Week Schedule">
      <DayPatternRefs>
        <DayPatternRef DayNumber="1" DayPattern="StandardDay" />
        <DayPatternRef DayNumber="2" DayPattern="StandardDay" />
        <DayPatternRef DayNumber="3" DayPattern="StandardDay" />
        <DayPatternRef DayNumber="4" DayPattern="StandardDay" />
        <DayPatternRef DayNumber="5" DayPattern="StandardDay" />
      </DayPatternRefs>
    </Schedule>
  </Schedules>
  <DayPatterns>
    <DayPattern Name="StandardDay" Description="Standard 8-5 Work Day">
      <Periods>
        <Period Start="08:00:00" End="12:00:00" Value="1" CostMultiplier="1" />
        <Period Start="13:00:00" End="17:00:00" Value="1" CostMultiplier="1" />
      </Periods>
    </DayPattern>
  </DayPatterns>
  <ChangeoverMatrices>
    <ChangeoverMatrix Name="MaterialColorMatrix" List="MaterialColor">
      <Changeover From="Green" To="Green" Value="0" />
      <Changeover From="Green" To="Red" Value="3" />
      <Changeover From="Green" To="Blue" Value="3" />
      <Changeover From="Green" To="Other" Value="3" />
      <Changeover From="Red" To="Green" Value="7" />
      <Changeover From="Red" To="Red" Value="0" />
      <Changeover From="Red" To="Blue" Value="5" />
      <Changeover From="Red" To="Other" Value="3" />
      <Changeover From="Blue" To="Green" Value="7" />
      <Changeover From="Blue" To="Red" Value="5" />
      <Changeover From="Blue" To="Blue" Value="0" />
      <Changeover From="Blue" To="Other" Value="3" />
      <Changeover From="Other" To="Green" Value="3" />
      <Changeover From="Other" To="Red" Value="3" />
      <Changeover From="Other" To="Blue" Value="3" />
      <Changeover From="Other" To="Other" Value="3" />
    </ChangeoverMatrix>
  </ChangeoverMatrices>
  <ResourceLogExpressions OwnerGanttGroupingExpression="MaterialName">
    <ResourceLogExpression Name="MaterialName" Description="" DataFormat="String" EvaluationType="StartTimeValue" GanttDisplayType="EntityGantt" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Owner.Object.Is.DefaultEntity, Owner.ManufacturingOrders.MaterialName, String.Empty)</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="BarFillColor" Description="" DataFormat="Color" EvaluationType="StartTimeValue" GanttColorType="OwnerItemFillColor" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Owner.Object.Is.DefaultEntity, Math.If(Owner.ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; Owner.WorkInProcess[1].CurrentRouteNumber == Owner.Routings.RouteNumber, Color.Yellow, Owner.Materials.GanttColor), Color.Gray)</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="BarOutlineColor" Description="" DataFormat="Color" EvaluationType="EndTimeValue" GanttColorType="OwnerItemBorderColor" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Owner.Object.Is.DefaultEntity, Math.If(TimeNow &gt; Owner.ManufacturingOrders.DueDate, Color.Red, Owner.Materials.GanttColor), Color.Gray)</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="RouteNumber" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInDropdowns="True">
      <Expression>Owner.Routings.RouteNumber</Expression>
    </ResourceLogExpression>
  </ResourceLogExpressions>
  <ConstraintLogExpressions>
    <ConstraintLogExpression Name="DanDateTime" Description="" DataFormat="Real" UnitType="Unspecified" EvaluationType="StartTimeValue">
      <Expression>DateTime.SystemNow</Expression>
    </ConstraintLogExpression>
  </ConstraintLogExpressions>
  <TransporterUsageLogExpressions>
    <TransporterUsageLogExpression Name="DateTimeExpression1" Description="" DataFormat="Real" UnitType="Unspecified" EvaluationType="StartTimeValue">
      <Expression>DateTime.SystemNow</Expression>
    </TransporterUsageLogExpression>
  </TransporterUsageLogExpressions>
  <ActiveResourceUsageLogExpressions>
    <ActiveResourceUsageLogExpression Purpose="OwnerGanttOwnerRowName" Name="RouteNumber" />
  </ActiveResourceUsageLogExpressions>
  <Graphics>
    <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
  </Graphics>
</Fragment>
<!-- yJVry/HhLZhV8xI2lT4/soIrPLgsU+gXaJrbgQa2kZ4zWXil8USTsLlru3xkqasKH52foUHVtnSUR2fPuMVPxQ== -->